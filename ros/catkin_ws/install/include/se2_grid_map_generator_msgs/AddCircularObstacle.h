// Generated by gencpp from file se2_grid_map_generator_msgs/AddCircularObstacle.msg
// DO NOT EDIT!


#ifndef SE2_GRID_MAP_GENERATOR_MSGS_MESSAGE_ADDCIRCULAROBSTACLE_H
#define SE2_GRID_MAP_GENERATOR_MSGS_MESSAGE_ADDCIRCULAROBSTACLE_H

#include <ros/service_traits.h>


#include <se2_grid_map_generator_msgs/AddCircularObstacleRequest.h>
#include <se2_grid_map_generator_msgs/AddCircularObstacleResponse.h>


namespace se2_grid_map_generator_msgs
{

struct AddCircularObstacle
{

typedef AddCircularObstacleRequest Request;
typedef AddCircularObstacleResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct AddCircularObstacle
} // namespace se2_grid_map_generator_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::se2_grid_map_generator_msgs::AddCircularObstacle > {
  static const char* value()
  {
    return "5c6462e7f4d4eb409c7358cc94ad2577";
  }

  static const char* value(const ::se2_grid_map_generator_msgs::AddCircularObstacle&) { return value(); }
};

template<>
struct DataType< ::se2_grid_map_generator_msgs::AddCircularObstacle > {
  static const char* value()
  {
    return "se2_grid_map_generator_msgs/AddCircularObstacle";
  }

  static const char* value(const ::se2_grid_map_generator_msgs::AddCircularObstacle&) { return value(); }
};


// service_traits::MD5Sum< ::se2_grid_map_generator_msgs::AddCircularObstacleRequest> should match
// service_traits::MD5Sum< ::se2_grid_map_generator_msgs::AddCircularObstacle >
template<>
struct MD5Sum< ::se2_grid_map_generator_msgs::AddCircularObstacleRequest>
{
  static const char* value()
  {
    return MD5Sum< ::se2_grid_map_generator_msgs::AddCircularObstacle >::value();
  }
  static const char* value(const ::se2_grid_map_generator_msgs::AddCircularObstacleRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::se2_grid_map_generator_msgs::AddCircularObstacleRequest> should match
// service_traits::DataType< ::se2_grid_map_generator_msgs::AddCircularObstacle >
template<>
struct DataType< ::se2_grid_map_generator_msgs::AddCircularObstacleRequest>
{
  static const char* value()
  {
    return DataType< ::se2_grid_map_generator_msgs::AddCircularObstacle >::value();
  }
  static const char* value(const ::se2_grid_map_generator_msgs::AddCircularObstacleRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::se2_grid_map_generator_msgs::AddCircularObstacleResponse> should match
// service_traits::MD5Sum< ::se2_grid_map_generator_msgs::AddCircularObstacle >
template<>
struct MD5Sum< ::se2_grid_map_generator_msgs::AddCircularObstacleResponse>
{
  static const char* value()
  {
    return MD5Sum< ::se2_grid_map_generator_msgs::AddCircularObstacle >::value();
  }
  static const char* value(const ::se2_grid_map_generator_msgs::AddCircularObstacleResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::se2_grid_map_generator_msgs::AddCircularObstacleResponse> should match
// service_traits::DataType< ::se2_grid_map_generator_msgs::AddCircularObstacle >
template<>
struct DataType< ::se2_grid_map_generator_msgs::AddCircularObstacleResponse>
{
  static const char* value()
  {
    return DataType< ::se2_grid_map_generator_msgs::AddCircularObstacle >::value();
  }
  static const char* value(const ::se2_grid_map_generator_msgs::AddCircularObstacleResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // SE2_GRID_MAP_GENERATOR_MSGS_MESSAGE_ADDCIRCULAROBSTACLE_H
